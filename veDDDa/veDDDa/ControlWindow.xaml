<Window x:Class="veDDDa.ControlWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:veDDDa"
        mc:Ignorable="d"
        Title="ControlWindow" Topmost="true"
        WindowStyle="None"
    WindowStartupLocation="CenterScreen" AllowsTransparency="True" Background="Transparent"
        Width="900">
    <Window.Resources>
        <TranslateTransform x:Key="EllipseCenterTr" X="-10" Y="-10"/>
        <local:RelativePositionConverter x:Key="relativePosConvert"/>
        <!--Control colors.-->
        <Color x:Key="WindowColor">#FFE8EDF9</Color>
        <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
        <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

        <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
        <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
        <Color x:Key="DisabledForegroundColor">#FF888888</Color>

        <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
        <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

        <Color x:Key="ControlLightColor">White</Color>
        <Color x:Key="ControlMediumColor">#FF7381F9</Color>
        <Color x:Key="ControlDarkColor">#FF211AA9</Color>

        <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
        <Color x:Key="ControlPressedColor">#FF211AA9</Color>


        <Color x:Key="GlyphColor">#FF444444</Color>
        <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

        <!--Border colors-->
        <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
        <Color x:Key="BorderMediumColor">#FF888888</Color>
        <Color x:Key="BorderDarkColor">#FF444444</Color>

        <Color x:Key="PressedBorderLightColor">#FF888888</Color>
        <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

        <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
        <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

        <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

        <!--Control-specific resources.-->
        <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
        <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
        <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

        <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

        <LinearGradientBrush x:Key="MenuPopupBrush"
                     EndPoint="0.5,1"
                     StartPoint="0.5,0">
            <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="0" />
            <GradientStop Color="{DynamicResource ControlMediumColor}"
                Offset="0.5" />
            <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="1" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                     StartPoint="0,0"
                     EndPoint="1,0">
            <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#000000FF"
                    Offset="0" />
                    <GradientStop Color="#600000FF"
                    Offset="0.4" />
                    <GradientStop Color="#600000FF"
                    Offset="0.6" />
                    <GradientStop Color="#000000FF"
                    Offset="1" />
                </GradientStopCollection>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>
        <Style x:Key="SliderButtonStyle"
       TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels"
          Value="true" />
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
            <Setter Property="IsTabStop"
          Value="false" />
            <Setter Property="Focusable"
          Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SliderThumbStyle"
       TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels"
          Value="true" />
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
            <Setter Property="Height"
          Value="14" />
            <Setter Property="Width"
          Value="14" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Ellipse x:Name="Ellipse"
                 StrokeThickness="1" Fill="Black"  Stretch="Uniform">

                        </Ellipse>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Template when the orientation of the Slider is Horizontal.-->
        <ControlTemplate x:Key="HorizontalSlider"
                 TargetType="{x:Type Slider}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto"
                     MinHeight="{TemplateBinding MinHeight}" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TickBar x:Name="TopTick"
             SnapsToDevicePixels="True"
             Placement="Top"
             Height="4"
             Visibility="Collapsed">
                    <TickBar.Fill>
                        <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                    </TickBar.Fill>
                </TickBar>
                <Border x:Name="TrackBackground"
            Margin="0"
            CornerRadius="2"
            Height="1"
            Grid.Row="1"
             Background="Black">
                </Border>
                <Track Grid.Row="1"
           x:Name="PART_Track">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderButtonStyle}"
                      Command="Slider.DecreaseLarge" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource SliderThumbStyle}"/>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderButtonStyle}"
                      Command="Slider.IncreaseLarge" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <TickBar x:Name="BottomTick"
             SnapsToDevicePixels="True"
             Grid.Row="2"
             Fill="{TemplateBinding Foreground}"
             Placement="Bottom"
             Height="4"
             Visibility="Collapsed" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="TickPlacement"
             Value="TopLeft">
                    <Setter TargetName="TopTick"
              Property="Visibility"
              Value="Visible" />
                </Trigger>
                <Trigger Property="TickPlacement"
             Value="BottomRight">
                    <Setter TargetName="BottomTick"
              Property="Visibility"
              Value="Visible" />
                </Trigger>
                <Trigger Property="TickPlacement"
             Value="Both">
                    <Setter TargetName="TopTick"
              Property="Visibility"
              Value="Visible" />
                    <Setter TargetName="BottomTick"
              Property="Visibility"
              Value="Visible" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!--Template when the orientation of the Slider is Vertical.-->
        <ControlTemplate x:Key="VerticalSlider"
                 TargetType="{x:Type Slider}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto"
                        MinWidth="{TemplateBinding MinWidth}" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TickBar x:Name="TopTick"
             SnapsToDevicePixels="True"
             Placement="Left"
             Width="4"
             Visibility="Collapsed">
                    <TickBar.Fill>
                        <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                    </TickBar.Fill>
                </TickBar>

                <Border x:Name="TrackBackground"
            Margin="0"
            CornerRadius="2"
            Width="4"
            Grid.Column="1"
            BorderThickness="1">
                    <Border.BorderBrush>
                        <LinearGradientBrush StartPoint="0,0"
                             EndPoint="1,0">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="{DynamicResource BorderLightColor}"
                            Offset="0.0" />
                                    <GradientStop Color="{DynamicResource BorderDarkColor}"
                            Offset="1.0" />
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>

                    </Border.BorderBrush>
                    <Border.Background>
                        <LinearGradientBrush EndPoint="1,0"
                             StartPoint="0.25,0">
                            <GradientStop Color="{DynamicResource ControlLightColor}"
                        Offset="0" />
                            <GradientStop Color="{DynamicResource SliderTrackDarkColor}"
                        Offset="1" />
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>
                <Track Grid.Column="1"
           x:Name="PART_Track">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderButtonStyle}"
                      Command="Slider.DecreaseLarge" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource SliderThumbStyle}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderButtonStyle}"
                      Command="Slider.IncreaseLarge" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <TickBar x:Name="BottomTick"
             SnapsToDevicePixels="True"
             Grid.Column="2"
             Fill="{TemplateBinding Foreground}"
             Placement="Right"
             Width="4"
             Visibility="Collapsed" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="TickPlacement"
             Value="TopLeft">
                    <Setter TargetName="TopTick"
              Property="Visibility"
              Value="Visible" />
                </Trigger>
                <Trigger Property="TickPlacement"
             Value="BottomRight">
                    <Setter TargetName="BottomTick"
              Property="Visibility"
              Value="Visible" />
                </Trigger>
                <Trigger Property="TickPlacement"
             Value="Both">
                    <Setter TargetName="TopTick"
              Property="Visibility"
              Value="Visible" />
                    <Setter TargetName="BottomTick"
              Property="Visibility"
              Value="Visible" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style TargetType="{x:Type Slider}">
            <Setter Property="SnapsToDevicePixels"
          Value="true" />
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
            <Style.Triggers>
                <Trigger Property="Orientation"
             Value="Horizontal">
                    <Setter Property="MinWidth"
              Value="104" />
                    <Setter Property="MinHeight"
              Value="21" />
                    <Setter Property="Template"
              Value="{StaticResource HorizontalSlider}" />
                </Trigger>
                <Trigger Property="Orientation"
             Value="Vertical">
                    <Setter Property="MinWidth"
              Value="21" />
                    <Setter Property="MinHeight"
              Value="104" />
                    <Setter Property="Template"
              Value="{StaticResource VerticalSlider}" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid Background="Transparent">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <Grid Height="100" Background="#e06348" MouseDown="Grid_MouseDown">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock FontFamily="./#Amazing Views" HorizontalAlignment="Left" Margin="20,0" VerticalAlignment="Center" FontSize="115">veDDDa 3000</TextBlock>
            <TextBlock FontFamily="./#Amazing Views" HorizontalAlignment="Center" Margin="20,0" VerticalAlignment="Center" FontSize="115" Grid.Column="1" Background="Transparent" MouseLeftButtonDown="TextBlock_MouseLeftButtonDown_2">X</TextBlock>
        </Grid>
        <Grid Margin="20,0" Grid.Row="1" HorizontalAlignment="Center">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <WrapPanel Width="200" Grid.Column="1">
                <WrapPanel.Resources>
                    <Style TargetType="Button">
                        <Setter Property="Foreground" Value="Black"/>
                        <Setter Property="Background" Value="#e06348"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border Background="{TemplateBinding Background}" Width="100" Height="100" BorderBrush="{TemplateBinding Foreground}" BorderThickness="1">
                                        <ContentPresenter Content="{TemplateBinding Content}" TextBlock.Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center" TextBlock.FontWeight="Black"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </WrapPanel.Resources>
                <Grid Width="200" Height="100"  Background="#23251f">
                    <TextBlock VerticalAlignment="Bottom" HorizontalAlignment="Left" Foreground="White" TextWrapping="Wrap">
                        <TextBlock.RenderTransform>
                            <RotateTransform Angle="-90"/>
                        </TextBlock.RenderTransform>
                    <Run FontWeight="Black">Watching file</Run>
                    </TextBlock>
                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="White" TextWrapping="Wrap" Margin="20, 0">
  
                    <Run x:Name="textRunFilepath">C:\filepath\shader.glsl</Run>
                    </TextBlock>
                </Grid>
                <Grid Width="200" Height="100" Background="#e06348" >
                    <TextBlock HorizontalAlignment="Left" VerticalAlignment="Bottom" TextWrapping="Wrap">
                        <TextBlock.RenderTransform>
                            <RotateTransform Angle="-90"/>
                        </TextBlock.RenderTransform>
                            Eye distance</TextBlock>
                    <Slider IsSnapToTickEnabled="True" VerticalAlignment="Center" TickFrequency="1" Margin="50,0"></Slider>
                </Grid>

                <Button Click="TextBlock_MouseLeftButtonDown" Background="#FF23251F">
                    <Grid Background="Transparent">
                        <Rectangle Stretch="UniformToFill" Margin="20">
                            <Rectangle.Fill>
                                <SolidColorBrush Color="#FFE06348"/>
                            </Rectangle.Fill>
                            <Rectangle.OpacityMask>
                                <ImageBrush ImageSource="./EyeIcon.png" RenderOptions.BitmapScalingMode="Fant"/>
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </Grid>
                    <!--<TextBlock TextWrapping="Wrap" TextAlignment="Center" MouseLeftButtonDown="TextBlock_MouseLeftButtonDown">Open Left Eye</TextBlock>-->
                </Button>
                <Button Click="TextBlock_MouseLeftButtonDown_1">
                    <Grid Background="Transparent">

                        <Rectangle Stretch="UniformToFill" Margin="20">
                            <Rectangle.LayoutTransform>
                                <ScaleTransform ScaleX="-1"/>
                            </Rectangle.LayoutTransform>
                            <Rectangle.Fill>
                                <SolidColorBrush Color="Black"/>
                            </Rectangle.Fill>
                            <Rectangle.OpacityMask>
                                <ImageBrush ImageSource="./EyeIcon.png" RenderOptions.BitmapScalingMode="Fant"/>
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </Grid>
                </Button>
                <Button Click="ResetLeft">
                    <Grid Background="Transparent">

                        <Rectangle Stretch="UniformToFill" Margin="20">
                            <Rectangle.LayoutTransform>
                                <ScaleTransform ScaleX="-1"/>
                            </Rectangle.LayoutTransform>
                            <Rectangle.Fill>
                                <SolidColorBrush Color="Black"/>
                            </Rectangle.Fill>
                            <Rectangle.OpacityMask>
                                <ImageBrush ImageSource="./SquareIcon.png" RenderOptions.BitmapScalingMode="Fant"/>
                            </Rectangle.OpacityMask>
                        </Rectangle>
                        <TextBlock TextWrapping="Wrap" TextAlignment="Center"  VerticalAlignment="Bottom" Foreground="Black">Reset</TextBlock>
                    </Grid>
                </Button>
                <Button Click="ResetRight" Background="#FF23251F">
                    <Grid Background="Transparent">
                        <Rectangle Stretch="UniformToFill" Margin="20">
                            <Rectangle.Fill>
                                <SolidColorBrush Color="#FFE06348"/>
                            </Rectangle.Fill>
                            <Rectangle.OpacityMask>
                                <ImageBrush ImageSource="./SquareIcon.png" RenderOptions.BitmapScalingMode="Fant"/>
                            </Rectangle.OpacityMask>
                        </Rectangle>
                        <TextBlock TextWrapping="Wrap" TextAlignment="Center" VerticalAlignment="Bottom" Foreground="#FFE06348">Reset</TextBlock>

                    </Grid>
                </Button>
                <TextBlock TextWrapping="Wrap" Foreground="Orange" Background="#606060" Height="100" x:Name="LogsTB"/>
            </WrapPanel>
            <Grid DataContext="{Binding ElementName=parentLeft}" x:Name="proxyParentLeft"></Grid>
            <Canvas Grid.Column="0" ClipToBounds="True"   Height="150" Width="200"  VerticalAlignment="Top" x:Name="parentLeft" DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=LeftEyeWin.DataContext}" MouseMove="parentLeft_MouseMove" MouseUp="parentLeft_MouseUp">
                <Canvas.Background>
                    <VisualBrush TileMode="Tile" Viewport="0,0,15,15" ViewportUnits="Absolute" Viewbox="0,0,15,15" ViewboxUnits="Absolute">
                        <VisualBrush.Visual>
                            <Grid Background="#23251f">
                                <Path Data="M 0 0 L 15 0" Stroke="Gray" />
                                <Path Data="M 0 0 L 0 15" Stroke="Gray" />
                            </Grid>
                        </VisualBrush.Visual>
                    </VisualBrush>
                </Canvas.Background>


                <Ellipse RenderTransform="{StaticResource EllipseCenterTr}" Margin="{Binding Mode=TwoWay, ElementName=parentLeft, Path=DataContext.TopLeft, Converter={StaticResource relativePosConvert}, ConverterParameter={x:Reference Name=proxyParentLeft}}" Stretch="Uniform" Width="20" Height="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Width}" Fill="#e06348" HorizontalAlignment="Left" VerticalAlignment="Top" MouseLeftButtonDown="Ellipse_MouseLeftButtonDown"/>
                <Ellipse RenderTransform="{StaticResource EllipseCenterTr}" Margin="{Binding  Mode=TwoWay,ElementName=parentLeft, Path=DataContext.TopRight, Converter={StaticResource relativePosConvert}, ConverterParameter={x:Reference Name=proxyParentLeft}}" Stretch="Uniform" Width="20" Height="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Width}" Fill="#e06348" HorizontalAlignment="Left" VerticalAlignment="Top"  MouseLeftButtonDown="Ellipse_MouseLeftButtonDown"/>
                <Ellipse RenderTransform="{StaticResource EllipseCenterTr}" Margin="{Binding  Mode=TwoWay,ElementName=parentLeft, Path=DataContext.BottomLeft, Converter={StaticResource relativePosConvert}, ConverterParameter={x:Reference Name=proxyParentLeft}}" Stretch="Uniform" Width="20" Height="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Width}" Fill="#e06348" HorizontalAlignment="Left" VerticalAlignment="Top" MouseLeftButtonDown="Ellipse_MouseLeftButtonDown"/>
                <Ellipse RenderTransform="{StaticResource EllipseCenterTr}" Margin="{Binding  Mode=TwoWay,ElementName=parentLeft, Path=DataContext.BottomRight, Converter={StaticResource relativePosConvert}, ConverterParameter={x:Reference Name=proxyParentLeft}}" Stretch="Uniform" Width="20" Height="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Width}" Fill="#e06348" HorizontalAlignment="Left" VerticalAlignment="Top" MouseLeftButtonDown="Ellipse_MouseLeftButtonDown"/>
                <!--<Line X1="{Binding ElementName=parentLeft, Path=DataContext.TopLeft.Left}" Y1="{Binding ElementName=parentLeft, Path=DataContext.TopLeft.Top}" X2="{Binding ElementName=parentLeft, Path=DataContext.TopRight.Left}" Y2="{Binding ElementName=parentLeft, Path=DataContext.TopRight.Top}" HorizontalAlignment="Left" VerticalAlignment="Top" StrokeThickness="2" Stroke="#e06348"/>
                <Line X1="{Binding ElementName=parentLeft, Path=DataContext.TopLeft.Left}" Y1="{Binding ElementName=parentLeft, Path=DataContext.TopLeft.Top}" X2="{Binding ElementName=parentLeft, Path=DataContext.BottomLeft.Left}" Y2="{Binding ElementName=parentLeft, Path=DataContext.BottomLeft.Top}" HorizontalAlignment="Left" VerticalAlignment="Top" StrokeThickness="2" Stroke="#e06348"/>
                <Line X1="{Binding ElementName=parentLeft, Path=DataContext.BottomLeft.Left}" Y1="{Binding ElementName=parentLeft, Path=DataContext.BottomLeft.Top}" X2="{Binding ElementName=parentLeft, Path=DataContext.BottomRight.Left}" Y2="{Binding ElementName=parentLeft, Path=DataContext.BottomRight.Top}" HorizontalAlignment="Left" VerticalAlignment="Top" StrokeThickness="2" Stroke="#e06348"/>
                <Line X1="{Binding ElementName=parentLeft, Path=DataContext.TopRight.Left}" Y1="{Binding ElementName=parentLeft, Path=DataContext.TopRight.Top}" X2="{Binding ElementName=parentLeft, Path=DataContext.BottomRight.Left}" Y2="{Binding ElementName=parentLeft, Path=DataContext.BottomRight.Top}" HorizontalAlignment="Left" VerticalAlignment="Top" StrokeThickness="2" Stroke="#e06348"/>-->

            </Canvas>
            <Grid DataContext="{Binding ElementName=parentRight}" x:Name="proxyParentRight"></Grid>
            <Canvas ClipToBounds="True" Grid.Column="2"   Height="150" Width="200"  VerticalAlignment="Top"   x:Name="parentRight" DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=RightEyeWin.DataContext}"  MouseMove="parentLeft_MouseMove" MouseUp="parentLeft_MouseUp">
                <Canvas.Background>
                    <VisualBrush TileMode="Tile" Viewport="0,0,15,15" ViewportUnits="Absolute" Viewbox="0,0,15,15" ViewboxUnits="Absolute">
                        <VisualBrush.Visual>
                            <Grid Background="#23251f">
                                <Path Data="M 0 0 L 15 0" Stroke="Gray" />
                                <Path Data="M 0 0 L 0 15" Stroke="Gray" />
                            </Grid>
                        </VisualBrush.Visual>
                    </VisualBrush>
                </Canvas.Background>
                <Ellipse RenderTransform="{StaticResource EllipseCenterTr}" Margin="{Binding Mode=TwoWay, ElementName=parentRight, Path=DataContext.TopLeft, Converter={StaticResource relativePosConvert}, ConverterParameter={x:Reference Name=proxyParentRight}}" Stretch="Uniform" Width="20" Height="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Width}" Fill="#e06348" HorizontalAlignment="Left" VerticalAlignment="Top" MouseLeftButtonDown="Ellipse_MouseLeftButtonDown"/>
                <Ellipse RenderTransform="{StaticResource EllipseCenterTr}" Margin="{Binding  Mode=TwoWay,ElementName=parentRight, Path=DataContext.TopRight, Converter={StaticResource relativePosConvert}, ConverterParameter={x:Reference Name=proxyParentRight}}" Stretch="Uniform" Width="20" Height="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Width}" Fill="#e06348" HorizontalAlignment="Left" VerticalAlignment="Top"  MouseLeftButtonDown="Ellipse_MouseLeftButtonDown"/>
                <Ellipse RenderTransform="{StaticResource EllipseCenterTr}" Margin="{Binding  Mode=TwoWay,ElementName=parentRight, Path=DataContext.BottomLeft, Converter={StaticResource relativePosConvert}, ConverterParameter={x:Reference Name=proxyParentRight}}" Stretch="Uniform" Width="20" Height="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Width}" Fill="#e06348" HorizontalAlignment="Left" VerticalAlignment="Top" MouseLeftButtonDown="Ellipse_MouseLeftButtonDown"/>
                <Ellipse RenderTransform="{StaticResource EllipseCenterTr}" Margin="{Binding  Mode=TwoWay,ElementName=parentRight, Path=DataContext.BottomRight, Converter={StaticResource relativePosConvert}, ConverterParameter={x:Reference Name=proxyParentRight}}" Stretch="Uniform" Width="20" Height="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Width}" Fill="#e06348" HorizontalAlignment="Left" VerticalAlignment="Top" MouseLeftButtonDown="Ellipse_MouseLeftButtonDown"/>

            </Canvas>
        </Grid>
    </Grid>
</Window>
